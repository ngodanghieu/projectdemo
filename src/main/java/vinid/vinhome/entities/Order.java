package vinid.vinhome.entities;
// Generated Dec 29, 2019 10:33:01 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "vinid_home")
public class Order implements java.io.Serializable {

	private Integer orderId;
	private Home home;
	private Status status;
	private User user;
	private Date orderDate;
	private long totalPrice;
	private long taxTotal;
	private String orderRequest;
	private String orderCode;
	private long paymentWith;
	private Set<OrderInfo> orderInfos = new HashSet<OrderInfo>(0);

	public Order() {
	}

	public Order(Home home, Status status, User user, Date orderDate, long totalPrice, long taxTotal,
			String orderRequest, String orderCode, long paymentWith) {
		this.home = home;
		this.status = status;
		this.user = user;
		this.orderDate = orderDate;
		this.totalPrice = totalPrice;
		this.taxTotal = taxTotal;
		this.orderRequest = orderRequest;
		this.orderCode = orderCode;
		this.paymentWith = paymentWith;
	}

	public Order(Home home, Status status, User user, Date orderDate, long totalPrice, long taxTotal,
			String orderRequest, String orderCode, long paymentWith, Set<OrderInfo> orderInfos) {
		this.home = home;
		this.status = status;
		this.user = user;
		this.orderDate = orderDate;
		this.totalPrice = totalPrice;
		this.taxTotal = taxTotal;
		this.orderRequest = orderRequest;
		this.orderCode = orderCode;
		this.paymentWith = paymentWith;
		this.orderInfos = orderInfos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "order_id", unique = true, nullable = false)
	public Integer getOrderId() {
		return this.orderId;
	}

	public void setOrderId(Integer orderId) {
		this.orderId = orderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "home_id", nullable = false)
	public Home getHome() {
		return this.home;
	}

	public void setHome(Home home) {
		this.home = home;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status", nullable = false)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "order_date", nullable = false, length = 10)
	public Date getOrderDate() {
		return this.orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}

	@Column(name = "total_price", nullable = false, precision = 10, scale = 0)
	public long getTotalPrice() {
		return this.totalPrice;
	}

	public void setTotalPrice(long totalPrice) {
		this.totalPrice = totalPrice;
	}

	@Column(name = "tax_total", nullable = false, precision = 10, scale = 0)
	public long getTaxTotal() {
		return this.taxTotal;
	}

	public void setTaxTotal(long taxTotal) {
		this.taxTotal = taxTotal;
	}

	@Column(name = "order_request", nullable = false, length = 65535)
	public String getOrderRequest() {
		return this.orderRequest;
	}

	public void setOrderRequest(String orderRequest) {
		this.orderRequest = orderRequest;
	}

	@Column(name = "order_code", nullable = false, length = 100)
	public String getOrderCode() {
		return this.orderCode;
	}

	public void setOrderCode(String orderCode) {
		this.orderCode = orderCode;
	}

	@Column(name = "payment_with", nullable = false, precision = 10, scale = 0)
	public long getPaymentWith() {
		return this.paymentWith;
	}

	public void setPaymentWith(long paymentWith) {
		this.paymentWith = paymentWith;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<OrderInfo> getOrderInfos() {
		return this.orderInfos;
	}

	public void setOrderInfos(Set<OrderInfo> orderInfos) {
		this.orderInfos = orderInfos;
	}

}
